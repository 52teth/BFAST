\#  This page is is written in groff however many of the control
\#  commands (.TH, .SH, .SS etc) are taken from the "man" macro package
\#  The man pages for roff and groff are of minimal use.  The primary
\#  information source for the groff control commands and macros is the
\#  "info groff" pages.  I have no idea what you're going to do for
\#  groff documentation if you're not using some flavour of unix.
\#
\#  Aide memoire for groff:
\#    .XX[X*]   - "request" control command for groff or macro package 
\#                convention - lower case for groff, upper case for macros
\#    \$n, \$(nn, \$[nnn] - retrieve argument by number from macro call
\#    \XX[X*]   - "escape" control command for inline use
\#    .\"       - deprecated comment line via "undefined request"
\#    \#        - comment line
\#    .ig .END  - ignore all text between tags, block level commenting
\#    .nf .fi   - don't screw with text - verbatim spacing kept
\#
\#  Aide memoire for navigating "info":
\#    space     - forward a page (will move on to next node)
\#    backspace - backward a page (will go back to previous node)
\#    tab       - skip cursor to next "link" in node document
\#    return    - follow "link" cursor is sitting on
\#    arrows    - move cursor left, right, up, down within page
\#    b         - go to top of current node document
\#    u         - up one level of nodes
\#    n         - next node in current chain
\#    p         - previous node in current chain
\#    q         - quit info system
\#
\#  Converting this document into output formats:
\#    man page:    groff -man -Tascii bfast.1
\#    postscript:  groff -man -Tps bfast.1
\#    HTML:        groff -man -Thtml bfast.1
\#
\#  Turn off justification and hyphenation
.na
.hy 0
.TH bfast 1 "Oct 3, 2008" "version 0.1.4" "ULCA bfast"
.SH NAME
bfast \- blat-like fast accurate search tool
.SH SYNOPSIS
.P
.fam C
.nf 
bpreprocess [\fBoptions\fR]
bmatches [\fBoptions\fR]
balign [\fBoptions\fR]
bpostprocess [\fBoptions\fR]
butil
.fi
.fam
.
.SH DESCRIPTION
.P
bfast is a software package that provides alignment tools for DNA sequencing.
The bfast system consists of four executable programs:
.BR bpreprocess "," 
.BR bmatches "," 
.BR bpalign "," 
and
.BR bpostprocess "."
Additional unsupported utilities are provided in the 
.BR butil 
directory.
.
.P
\fBbpreprocess\fR
to convert the reference sequence to a binary format for faster loading and to pre-compute indexes needed to perform alignment. 
The indexes are stored in binary format and can then be re-used to align new reads using the previous settings.
.
.P
\fBbmatches\fR
is used to find the candidate alignment locations using the indexes generated from 
\fBbpreprocess\fR.
.
.P
\fBbalign\fR
is used to give the final alignment score for each read and its associated candidate alignment locations generated from
\fBbmatches\fR.
.
.P
\fBbpostprocess\fR
is used to reformat the output from
\fBbalign\fR
into a user-specified format.
.
.SH INSTALLATION
.P
\fBbfast\fR uses the GNU Build System, or Autotools.
To install from source, go to the main directory and type in (no quotes) 
.br 
\fB"./configure"\fR
.br
\fB"make"\fR
.br
\fB"make install"\fR
.br
.
.SH FILE FORMATS
.
.TP
.B Reference Genome FASTA File
This file contains the sequence that composes a reference sequence and should be in FASTA format.
There can be up to 2147483648 different contigs, for example chromosomes or exons.
The first line of a contig begins with a ">" and the contig name, for example \fBchr1\fR.
The subsequent lines contain the sequence for that contig.
.
.TP
.B Index Layout
The file specified will contain the layout for each index that you wish to generate.
Each line corresponds to an index for one layout.
Thus, if multiple layouts are given, each index will be created in batch-mode and in serial.
The output file names for the indexes will be labeled according to this order (i.e. *.$i.bif with this index specified by the $ith layout).
The entries in a line should be tab or space deliminated.
The first entry is the hash width.
The second entry is the mask for the index.
The mask is specified as zeros and ones with no spaces.
A one specifies that a base is to be used, and a zero specifies that a base is to be ignored. 
The keysize is the number of ones in the mask and the width is the total number of zeros and ones.
An example would be:
.br
12 11111111111111
.br
12 111101111111111
.br
12 11111010011010101111
.br
12 11110111111110011
.br
12 111101110010111111
.br
Here we will generate five indexes.
Each index will have a index hash width of twelve.
The first index is a contiguous fourteen bases (keysize 14 and width 14), the second index ignores the fifth base (keysize 14 and width 15), and so on... 
.
.TP
.B Reads FASTA File
The file containing the reads will be in FASTA format.
The first line will contain the read name.
The read name must have no whitespace characters.
The second line will contain the sequence of the read.
The third line will contain the sequence of the paired end read, if available.
The reads should be specified 5'->3' from left-to-right.
If the read is paired end, both the reads should be 5'->3' from left-to-right and on the same strand.
An example is:
.br
>chr22:28454027-28454058
.br
CTCCTTTCACTCTGTGTTGAGAAGTTTTAAAG
.br
>chr22:26189283-26189314
.br
ATCGCTTcaggggttggcaaactcatgctgta
.br
>chr22:26230468-26230499
.br
GAAGACCAGCCAGGCCTGCTGTGATATATGAC
.br
Three reads are specified above, with there names in this example corresponding to their known position in the genome.
Typically, the read name will be dependent on the sequence technology used.
For color space reads, the format has same requirements as above with the sequence a one base primer followed by the col
or sequence represented by numbers.
An example is:
.br
>920_23_612_R3
.br
G0100033000010000111000103
.br
>920_23_729_R3
.br
G0100000000000300013000100
.br
>920_24_604_R3
.br
G0100013002020200111100103
.br
>920_24_651_R3
.br
G0120031000021000000000010
.br
>920_24_757_R3
.br
G0100011000020100132100022
.br
.
.TP
.B Offsets File
The offsets file contains the list of offsets to use when searching with the indexes.
The offsets are separated by whitespaces.
An example is:
.br
0 1 2 3 4 5
.br
Six offsets are specified above.
Offsets should be specified in increasing order.
.
.TP
.B Scoring Matrix File
The scoring matrix file is used when aligning the reads to their respective candidate alignment locations.
For nucleotide alignments or four letter alphabets there will be seven lines.
An additional five lines will be included for color space alignment.
The first line specifies the gap open penalty.
The second line specifies the gap extension penalty.
The third to the seventh line gives the substitution matrix for the four letters plus "anything else".
The rows labels on the rows and columns of the substitution matrix is A,C,G,T, and N, where N stands for "anything else".
An example with a file without a color space substitution matrix is:
.br
-3
.br
-1
.br
2   -1  -1  -1  -1
.br
-1  2   -1  -1  -1
.br
-1  -1  2   -1  -1
.br
-1  -1  -1  2   -1
.br
-1  -1  -1  -1  0
.br
would specify a gap open penalty of -2, and a gap extension penalty of -1.
The penalty to substitute a read base of A for a reference base C would be -1 (row 1 column 2 of the substitution matrix).
The penalty to substitute a read base of C for a reference base N would be -1 (row 2 column 5 of the substitution matrix).
If aligning in color space, the eighth to the twelfth line gives the substitution matrix for the four colors.
There are four colors that can substitute for each other, plus a fifth color which stands for "anything else".
An example of such a file with a color substitution matrix is:
.br
-3
.br
-1
.br
2  -1   -1  -1  -1
.br
-1  2   -1  -1  -1
.br
-1  -1  2   -1  -1
.br
-1  -1  -1  2   -1
.br
-1  -1  -1  -1  0
.br
0   -4  -4  -4  -4
.br
-4  0   -4  -4  -4
.br
-4  -4  0   -4  -4
.br
-4  -4  -4  0   -4
.br
-4  -4  -4  -4   0
.br
.
.TP
.B Exons File
The file specifies ranges of contiguous sequence to be included in the index.
Sequence outside the specified range will not be included.
The format of this file is one entry per line.
An entry consists of four numbers, separated by whitepsace: start contig, start position, end contig, and end position.
An example would be:
.br
1	1	1	350000
2	1	3	400000
3	450000	3	455000
4	1	4	100000
5	100	5	250
.
.SH KNOWN ISSUES
.TP
.B Compiler limitations
The target compilation environment is gcc and a number of gcc-specific 
features are used including the argp commandline argument processing 
system so bfast may not compile on non-gcc C/C++ compilers.
.
.
.SH AUTHORS
.P
Nils Homer <nhomer@cs.ucla.edu>
.br
Barry Merriman <barrym@ucla.edu>
.br
Stanley F. Nelson <snelson@ucla.edu>
.
.SH "SEE ALSO"
.P
.BR bpreprocess "(1), " 
.BR bmatches "(1), "
.BR balign "(1), "
.BR bpostprocess "(1),"
.BR butil "(1)."
.
.SH COPYRIGHT
.P
bfast is copyright 2008 by The University of California - Los 
Angeles.  All rights reserved.  This License is limited to, and you
may use the Software solely for, your own internal and non-commercial
use for academic and research purposes.  Without limiting the foregoing,
you may not use the Software as part of, or in any way in connection
with the production, marketing, sale or support of any commercial
product or service.  For commercial use, please contact
snelson@ucla.edu.  By installing this Software you are agreeing to
the terms of the LICENSE file distributed with this software.
.
.P
In any work or product derived from the use of this Software, proper
attribution of the authors as the source of the software or data must
be made.  Please reference the original BFAST paper PMID <to be published>.  
In addition, the following URL should be cited:
.
.P
.I <http://genome.ucla.edu/bfast>
